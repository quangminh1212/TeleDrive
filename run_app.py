#!/usr/bin/env python3
"""
TeleDrive - Run App
Ch·∫°y ·ª©ng d·ª•ng TeleDrive v·ªõi database ƒë√£ ƒë∆∞·ª£c s·ª≠a
"""

import sys
import os
from pathlib import Path

# Th√™m th∆∞ m·ª•c src v√†o Python path
sys.path.insert(0, os.path.join(os.path.dirname(__file__), 'src'))

# T·∫Øt logging
import logging
logging.disable(logging.CRITICAL)

# T·∫Øt warnings
import warnings
warnings.filterwarnings("ignore")

def main():
    try:
        print("üöÄ TeleDrive Starting...")
        
        # Import Flask v√† t·∫°o app
        from flask import Flask
        
        # T·∫°o Flask app
        template_dir = Path(__file__).parent / 'templates'
        static_dir = Path(__file__).parent / 'static'
        app = Flask(__name__, template_folder=str(template_dir), static_folder=str(static_dir))
        
        # C·∫•u h√¨nh database
        project_root = Path(__file__).parent
        instance_dir = project_root / 'instance'
        instance_dir.mkdir(exist_ok=True)
        db_path = instance_dir / 'teledrive.db'
        
        app.config.update({
            'SQLALCHEMY_DATABASE_URI': f'sqlite:///{db_path.resolve()}',
            'SQLALCHEMY_TRACK_MODIFICATIONS': False,
            'SECRET_KEY': 'dev_secret_key_for_teledrive',
            'DEV_MODE': True  # B·∫≠t dev mode
        })
        
        print(f"üìÅ Database: {db_path}")
        
        # Import v√† init database
        from src.teledrive.database import init_database
        init_database(app)
        
        # Import v√† init auth
        from src.teledrive.auth import auth_manager
        auth_manager.init_app(app)
        
        # Import routes t·ª´ app.py
        with app.app_context():
            # Import t·∫•t c·∫£ routes
            from src.teledrive.app import *
            
        print("‚úÖ App initialized successfully")
        print("üåê Server: http://localhost:5000")
        print("üîß Dev Mode: Enabled (no login required)")
        print("üì± Press Ctrl+C to stop")
        print("-" * 50)
        
        # Ch·∫°y server
        app.run(
            host='0.0.0.0',
            port=5000,
            debug=False,
            threaded=True,
            use_reloader=False
        )
        
    except KeyboardInterrupt:
        print("\n‚úÖ Server stopped.")
    except Exception as e:
        print(f"‚ùå Error: {e}")
        import traceback
        traceback.print_exc()
        return False
    
    return True

if __name__ == '__main__':
    main()
