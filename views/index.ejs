<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css" rel="stylesheet">
    <style>
        :root {
            --primary-color: #0088cc;
            --hover-color: #006699;
        }
        body {
            background-color: #f8f9fa;
            font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;
        }
        .navbar {
            background-color: var(--primary-color) !important;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        .navbar-brand, .nav-link {
            color: white !important;
        }
        .nav-link:hover {
            color: rgba(255,255,255,0.8) !important;
        }
        .file-card {
            background: white;
            border-radius: 10px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.05);
            transition: transform 0.2s;
            margin-bottom: 1rem;
        }
        .file-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        }
        .file-icon {
            font-size: 2rem;
            color: var(--primary-color);
        }
        .file-name {
            color: #333;
            font-weight: 500;
            margin: 0.5rem 0;
            word-break: break-word;
        }
        .file-info {
            color: #666;
            font-size: 0.9rem;
        }
        .btn-primary {
            background-color: var(--primary-color);
            border-color: var(--primary-color);
        }
        .btn-primary:hover {
            background-color: var(--hover-color);
            border-color: var(--hover-color);
        }
        .btn-outline-primary {
            color: var(--primary-color);
            border-color: var(--primary-color);
        }
        .btn-outline-primary:hover {
            background-color: var(--primary-color);
            border-color: var(--primary-color);
        }
        .upload-area {
            border: 2px dashed #ddd;
            border-radius: 10px;
            padding: 2rem;
            text-align: center;
            background: white;
            cursor: pointer;
            transition: all 0.3s;
        }
        .upload-area:hover {
            border-color: var(--primary-color);
            background: #f8f9fa;
        }
        .upload-icon {
            font-size: 3rem;
            color: var(--primary-color);
            margin-bottom: 1rem;
        }
        .storage-info {
            background: white;
            border-radius: 10px;
            padding: 1rem;
            margin-bottom: 1rem;
        }
        .progress {
            height: 8px;
            margin-top: 0.5rem;
        }
        .progress-bar {
            background-color: var(--primary-color);
        }
        .status-badge {
            padding: 0.25rem 0.5rem;
            border-radius: 20px;
            font-size: 0.8rem;
            font-weight: 500;
        }
        .status-local {
            background-color: #e3f2fd;
            color: #0d47a1;
        }
        .status-telegram {
            background-color: #e8f5e9;
            color: #1b5e20;
        }
        .status-missing {
            background-color: #ffebee;
            color: #b71c1c;
        }
        .loading-overlay {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(255,255,255,0.8);
            z-index: 9999;
        }
        .loading-spinner {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
        }
    </style>
</head>
<body>
    <!-- Navbar -->
    <nav class="navbar navbar-expand-lg navbar-dark mb-4">
        <div class="container">
            <a class="navbar-brand" href="/"><i class="bi bi-cloud-arrow-up me-2"></i>TeleDrive</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav">
                    <li class="nav-item">
                        <a class="nav-link" href="/"><i class="bi bi-house-door me-1"></i>Trang chủ</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#" onclick="syncFiles()"><i class="bi bi-arrow-repeat me-1"></i>Đồng bộ</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#" onclick="cleanUploads()"><i class="bi bi-cloud-arrow-up me-1"></i>Tải lên Telegram</a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>

    <div class="container">
        <!-- Thông báo lỗi -->
        <% if (error) { %>
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="bi bi-exclamation-triangle me-2"></i><%= error %>
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
        <% } %>

        <!-- Thông tin lưu trữ -->
        <div class="storage-info mb-4">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h5 class="mb-0">Dung lượng sử dụng</h5>
                    <small class="text-muted"><%= formatBytes(storageInfo.used) %> / <%= formatBytes(storageInfo.total) %></small>
                </div>
                <div class="text-end">
                    <span class="text-muted"><%= storageInfo.percent.toFixed(1) %>%</span>
                </div>
            </div>
            <div class="progress">
                <div class="progress-bar" role="progressbar" style="width: <%= storageInfo.percent %>%"></div>
            </div>
        </div>

        <!-- Khu vực tải lên -->
        <div class="upload-area mb-4" onclick="document.getElementById('fileInput').click()">
            <input type="file" id="fileInput" style="display: none" onchange="uploadFile(this)">
            <i class="bi bi-cloud-arrow-up upload-icon"></i>
            <h4>Kéo thả file vào đây</h4>
            <p class="text-muted mb-0">hoặc click để chọn file</p>
        </div>

        <!-- Danh sách file -->
        <div class="row" id="fileList">
            <% if (files && files.length > 0) { %>
                <% files.forEach(function(file) { %>
                    <div class="col-md-6 col-lg-4">
                        <div class="file-card p-3">
                            <div class="d-flex align-items-center mb-2">
                                <% if (file.fileType === 'image') { %>
                                    <i class="bi bi-image file-icon me-2"></i>
                                <% } else if (file.fileType === 'video') { %>
                                    <i class="bi bi-camera-video file-icon me-2"></i>
                                <% } else if (file.fileType === 'audio') { %>
                                    <i class="bi bi-music-note file-icon me-2"></i>
                                <% } else { %>
                                    <i class="bi bi-file-earmark file-icon me-2"></i>
                                <% } %>
                                <div class="flex-grow-1">
                                    <h6 class="file-name"><%= file.name %></h6>
                                    <div class="file-info">
                                        <%= formatBytes(file.size) %> • <%= formatDate(file.uploadDate) %>
                                    </div>
                                </div>
                            </div>
                            <div class="d-flex justify-content-between align-items-center">
                                <span class="status-badge <%= file.fileStatus === 'local' ? 'status-local' : (file.fileStatus === 'telegram' ? 'status-telegram' : 'status-missing') %>">
                                    <i class="bi <%= file.fileStatus === 'local' ? 'bi-hdd' : (file.fileStatus === 'telegram' ? 'bi-telegram' : 'bi-exclamation-circle') %>"></i>
                                    <%= file.fileStatus === 'local' ? 'Local' : (file.fileStatus === 'telegram' ? 'Telegram' : 'Không khả dụng') %>
                                </span>
                                <div class="btn-group">
                                    <a href="/file/<%= file.id %>" class="btn btn-sm btn-outline-primary" title="Xem trước">
                                        <i class="bi bi-eye"></i>
                                    </a>
                                    <a href="/api/files/<%= file.id %>/download" class="btn btn-sm btn-primary" title="Tải xuống">
                                        <i class="bi bi-download"></i>
                                    </a>
                                    <button class="btn btn-sm btn-outline-danger" onclick="deleteFile('<%= file.id %>')" title="Xóa">
                                        <i class="bi bi-trash"></i>
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                <% }); %>
            <% } else { %>
                <div class="col-12 text-center py-5">
                    <i class="bi bi-inbox display-1 text-muted"></i>
                    <h3 class="mt-3">Chưa có file nào</h3>
                    <p class="text-muted">Hãy tải lên file đầu tiên của bạn</p>
                </div>
            <% } %>
        </div>
    </div>

    <!-- Loading overlay -->
    <div class="loading-overlay" id="loadingOverlay">
        <div class="loading-spinner">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Đang tải...</span>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Hàm format bytes
        function formatBytes(bytes, decimals = 2) {
            if (bytes === 0) return '0 Bytes';
            const k = 1024;
            const dm = decimals < 0 ? 0 : decimals;
            const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];
            const i = Math.floor(Math.log(bytes) / Math.log(k));
            return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];
        }

        // Hàm format date
        function formatDate(dateString) {
            const date = new Date(dateString);
            return date.toLocaleDateString('vi-VN', {
                year: 'numeric',
                month: '2-digit',
                day: '2-digit',
                hour: '2-digit',
                minute: '2-digit'
            });
        }

        // Hiển thị loading
        function showLoading() {
            document.getElementById('loadingOverlay').style.display = 'block';
        }

        // Ẩn loading
        function hideLoading() {
            document.getElementById('loadingOverlay').style.display = 'none';
        }

        // Upload file
        async function uploadFile(input) {
            if (!input.files || input.files.length === 0) return;

            showLoading();
            const formData = new FormData();
            formData.append('file', input.files[0]);

            try {
                const response = await fetch('/upload', {
                    method: 'POST',
                    body: formData
                });

                if (!response.ok) throw new Error('Upload failed');

                // Reload page after successful upload
                window.location.reload();
            } catch (error) {
                console.error('Upload error:', error);
                alert('Lỗi khi tải lên file: ' + error.message);
                hideLoading();
            }
        }

        // Đồng bộ files
        async function syncFiles() {
            showLoading();
            try {
                const response = await fetch('/api/sync', {
                    method: 'POST'
                });

                if (!response.ok) throw new Error('Sync failed');

                window.location.reload();
            } catch (error) {
                console.error('Sync error:', error);
                alert('Lỗi khi đồng bộ: ' + error.message);
                hideLoading();
            }
        }

        // Dọn dẹp uploads
        async function cleanUploads() {
            if (!confirm('Bạn có chắc muốn tải tất cả file lên Telegram?')) return;

            showLoading();
            try {
                const response = await fetch('/api/clean', {
                    method: 'POST'
                });

                if (!response.ok) throw new Error('Clean failed');

                window.location.reload();
            } catch (error) {
                console.error('Clean error:', error);
                alert('Lỗi khi dọn dẹp: ' + error.message);
                hideLoading();
            }
        }

        // Xóa file
        async function deleteFile(fileId) {
            if (!confirm('Bạn có chắc muốn xóa file này?')) return;

            showLoading();
            try {
                const response = await fetch(`/api/files/${fileId}`, {
                    method: 'DELETE'
                });

                if (!response.ok) throw new Error('Delete failed');

                window.location.reload();
            } catch (error) {
                console.error('Delete error:', error);
                alert('Lỗi khi xóa file: ' + error.message);
                hideLoading();
            }
        }

        // Drag and drop
        const uploadArea = document.querySelector('.upload-area');

        uploadArea.addEventListener('dragover', (e) => {
            e.preventDefault();
            uploadArea.style.borderColor = 'var(--primary-color)';
            uploadArea.style.background = '#f8f9fa';
        });

        uploadArea.addEventListener('dragleave', (e) => {
            e.preventDefault();
            uploadArea.style.borderColor = '#ddd';
            uploadArea.style.background = 'white';
        });

        uploadArea.addEventListener('drop', (e) => {
            e.preventDefault();
            uploadArea.style.borderColor = '#ddd';
            uploadArea.style.background = 'white';

            const files = e.dataTransfer.files;
            if (files.length > 0) {
                document.getElementById('fileInput').files = files;
                uploadFile(document.getElementById('fileInput'));
            }
        });
    </script>
</body>
</html> 