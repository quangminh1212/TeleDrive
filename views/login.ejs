<!DOCTYPE html>
<html lang="vi">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Đăng nhập - TeleDrive</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
  <style>
    body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      background-color: #f8f9fa;
      min-height: 100vh;
      display: flex;
      flex-direction: column;
    }
    
    .navbar {
      background-color: #0088cc;
    }
    
    .navbar-brand {
      font-weight: bold;
      color: white !important;
    }
    
    .login-container {
      flex: 1;
      display: flex;
      align-items: center;
      justify-content: center;
      padding: 2rem 0;
    }
    
    .login-card {
      max-width: 500px;
      width: 100%;
      padding: 2rem;
      border-radius: 10px;
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    }
    
    .login-title {
      font-size: 1.75rem;
      font-weight: bold;
      margin-bottom: 0.5rem;
      color: #212529;
    }
    
    .login-subtitle {
      font-size: 1rem;
      color: #6c757d;
      margin-bottom: 2rem;
    }
    
    .telegram-btn {
      background-color: #0088cc;
      border: none;
      padding: 0.75rem 0;
      border-radius: 50px;
      font-weight: bold;
      display: flex;
      align-items: center;
      justify-content: center;
      gap: 0.5rem;
      transition: all 0.2s;
    }
    
    .telegram-btn:hover {
      background-color: #0077b5;
    }
    
    .telegram-icon {
      font-size: 1.5rem;
    }
    
    .qr-section {
      display: none;
      margin-top: 2rem;
      text-align: center;
    }
    
    .qr-code {
      width: 200px;
      height: 200px;
      margin: 1rem auto;
      background-color: #f1f1f1;
      padding: 1rem;
      border-radius: 10px;
    }
    
    .divider {
      display: flex;
      align-items: center;
      margin: 1.5rem 0;
    }
    
    .divider-line {
      flex: 1;
      height: 1px;
      background-color: #dee2e6;
    }
    
    .divider-text {
      padding: 0 1rem;
      color: #6c757d;
    }
    
    .footer {
      background-color: #343a40;
      color: white;
      padding: 1rem 0;
      margin-top: auto;
    }
  </style>
</head>
<body>
  <nav class="navbar navbar-expand-lg navbar-dark">
    <div class="container">
      <a class="navbar-brand" href="/">TeleDrive</a>
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarNav">
        <ul class="navbar-nav me-auto">
          <li class="nav-item">
            <a class="nav-link" href="/#features">Tính năng</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/#about">Giới thiệu</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/#contact">Liên hệ</a>
          </li>
        </ul>
      </div>
    </div>
  </nav>
  
  <div class="login-container">
    <div class="container">
      <div class="card login-card mx-auto">
        <div class="text-center mb-4">
          <h1 class="login-title">Đăng nhập TeleDrive</h1>
          <p class="login-subtitle">Sử dụng tài khoản Telegram của bạn để đăng nhập</p>
        </div>
        
        <button id="telegramLogin" class="btn btn-primary telegram-btn" onclick="startLogin()">
          <i class="bi bi-telegram telegram-icon"></i>
          Đăng nhập với Telegram
        </button>
        
        <div class="divider">
          <div class="divider-line"></div>
          <div class="divider-text">hoặc</div>
          <div class="divider-line"></div>
        </div>
        
        <button id="showQrBtn" class="btn btn-outline-secondary" onclick="showQrCode()">
          Quét mã QR
        </button>
        
        <div id="qrSection" class="qr-section">
          <p>Quét mã QR này với ứng dụng Telegram trên điện thoại của bạn</p>
          <div id="qrCode" class="qr-code d-flex align-items-center justify-content-center">
            <div class="spinner-border text-primary" role="status">
              <span class="visually-hidden">Đang tải...</span>
            </div>
          </div>
          <p class="small text-muted">Mã QR này sẽ hết hạn sau 30 phút</p>
        </div>
      </div>
    </div>
  </div>
  
  <footer class="footer text-center">
    <div class="container">
      <p class="mb-0">&copy; <%= new Date().getFullYear() %> TeleDrive. Tất cả các quyền được bảo lưu.</p>
    </div>
  </footer>
  
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.3/font/bootstrap-icons.css">
  
  <script>
    let loginToken = '';
    let loginCheckInterval;
    
    // Start login process
    async function startLogin() {
      try {
        // Get login link from server
        const response = await fetch('/api/auth/login-link');
        const data = await response.json();
        
        if (data.deepLink) {
          // Save login token
          loginToken = data.token;
          
          // Redirect to Telegram
          window.location.href = data.deepLink;
          
          // Start checking login status
          startLoginCheck();
        } else {
          showError('Không thể tạo liên kết đăng nhập');
        }
      } catch (error) {
        showError('Có lỗi xảy ra khi đăng nhập');
        console.error(error);
      }
    }
    
    // Show QR code for login
    async function showQrCode() {
      const qrSection = document.getElementById('qrSection');
      qrSection.style.display = 'block';
      
      try {
        // Get login link from server
        const response = await fetch('/api/auth/login-link');
        const data = await response.json();
        
        if (data.deepLink) {
          // Save login token
          loginToken = data.token;
          
          // Generate QR code
          const qrCode = document.getElementById('qrCode');
          qrCode.innerHTML = `<img src="https://api.qrserver.com/v1/create-qr-code/?size=200x200&data=${encodeURIComponent(data.deepLink)}" alt="Login QR Code">`;
          
          // Start checking login status
          startLoginCheck();
        } else {
          showError('Không thể tạo mã QR đăng nhập');
        }
      } catch (error) {
        showError('Có lỗi xảy ra khi tạo mã QR');
        console.error(error);
      }
    }
    
    // Start checking login status
    function startLoginCheck() {
      // Clear any existing interval
      if (loginCheckInterval) {
        clearInterval(loginCheckInterval);
      }
      
      // Check login status every 2 seconds
      loginCheckInterval = setInterval(checkLoginStatus, 2000);
      
      // Stop checking after 30 minutes
      setTimeout(() => {
        clearInterval(loginCheckInterval);
      }, 30 * 60 * 1000);
    }
    
    // Check login status
    async function checkLoginStatus() {
      if (!loginToken) return;
      
      try {
        // Check login status from server
        const response = await fetch(`/api/auth/check-login?token=${loginToken}`);
        const data = await response.json();
        
        if (data.loggedIn) {
          // Clear interval
          clearInterval(loginCheckInterval);
          
          // Redirect to dashboard
          window.location.href = data.redirectUrl || '/dashboard';
        }
      } catch (error) {
        console.error('Error checking login status:', error);
      }
    }
    
    // Show error message
    function showError(message) {
      alert(message);
    }
  </script>
</body>
</html> 