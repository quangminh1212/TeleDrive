<!DOCTYPE html>
<html lang="vi">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Đăng nhập | TeleDrive</title>
  <link rel="stylesheet" href="/css/styles.css">
  <style>
    .error-message {
      color: #dc3545;
      background-color: #f8d7da;
      border: 1px solid #f5c6cb;
      border-radius: 4px;
      padding: 10px;
      margin-bottom: 20px;
      display: none;
    }
    
    .success-message {
      color: #28a745;
      background-color: #d4edda;
      border: 1px solid #c3e6cb;
      border-radius: 4px;
      padding: 10px;
      margin-bottom: 20px;
      display: none;
    }

    .auth-code {
      font-family: monospace;
      font-size: 16px;
      background-color: #f8f9fa;
      padding: 12px 15px;
      border-radius: 4px;
      border: 1px solid #6c757d;
      display: block;
      margin: 15px 0;
      font-weight: bold;
      word-break: break-all;
      cursor: pointer;
      transition: background-color 0.2s;
      box-shadow: 0 2px 4px rgba(0,0,0,0.05);
    }

    .auth-code:hover {
      background-color: #e9ecef;
    }

    .auth-code:active {
      background-color: #dee2e6;
    }

    .login-instructions {
      background-color: #f8f9fa;
      border-left: 4px solid #0088cc;
      padding: 15px;
      margin: 20px 0;
      border-radius: 4px;
    }

    .login-instructions ol {
      margin: 10px 0 0 20px;
      padding: 0;
    }

    .login-instructions li {
      margin-bottom: 8px;
    }

    .auth-code-container {
      margin: 15px 0;
      display: none;
      background-color: #fff;
      border-radius: 8px;
      padding: 15px;
      box-shadow: 0 2px 5px rgba(0,0,0,0.05);
      border: 1px solid #e9ecef;
    }

    .login-methods {
      margin-top: 20px;
    }

    .command-title {
      display: flex;
      align-items: center;
      margin-bottom: 8px;
      font-weight: bold;
      color: #0088cc;
    }

    .command-title svg {
      margin-right: 5px;
    }

    .copy-feedback {
      font-size: 13px;
      color: #28a745;
      margin-top: 5px;
      display: none;
    }

    .copy-btn-container {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-top: 8px;
    }

    #qr-container-error {
      text-align: center;
      padding: 20px;
      background-color: #f8f9fa;
      border-radius: 8px;
      margin: 10px 0;
      display: none;
    }
  </style>
</head>
<body>
  <div class="container">
    <header>
      <div class="logo">
        <h1>TeleDrive</h1>
      </div>
      <nav>
        <ul>
          <li><a href="/">Trang chủ</a></li>
        </ul>
      </nav>
    </header>

    <main>
      <div class="login-container">
        <div class="login-box">
          <h2>Đăng nhập bằng Telegram</h2>
          <p>Quét mã QR hoặc nhấp vào nút đăng nhập để kết nối với tài khoản Telegram của bạn.</p>
          
          <div id="error-message" class="error-message"></div>
          <div id="success-message" class="success-message"></div>
          
          <div class="login-instructions">
            <strong>Hướng dẫn đăng nhập:</strong>
            <ol>
              <li>Quét mã QR hoặc nhấn vào nút "Đăng nhập với Telegram"</li>
              <li>Khi Telegram mở ra, nhấn vào nút <strong>START</strong> hoặc gõ lệnh <strong>/start</strong></li>
              <li>Nếu bot không phản hồi, hãy sao chép lệnh bên dưới và dán vào chat với bot</li>
              <li>Đợi hệ thống xác thực và chuyển hướng tự động</li>
            </ol>
          </div>

          <div id="auth-code-container" class="auth-code-container">
            <div class="command-title">
              <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" viewBox="0 0 16 16">
                <path d="M14 1a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1h12zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z"/>
                <path d="M6.854 4.646a.5.5 0 0 1 0 .708L4.207 8l2.647 2.646a.5.5 0 0 1-.708.708l-3-3a.5.5 0 0 1 0-.708l3-3a.5.5 0 0 1 .708 0zm2.292 0a.5.5 0 0 0 0 .708L11.793 8l-2.647 2.646a.5.5 0 0 0 .708.708l3-3a.5.5 0 0 0 0-.708l-3-3a.5.5 0 0 0-.708 0z"/>
              </svg>
              Sao chép và dán lệnh này vào Telegram:
            </div>
            <div id="full-command" class="auth-code">/start</div>
            <div class="copy-btn-container">
              <div id="copy-feedback" class="copy-feedback">Đã sao chép thành công!</div>
              <button id="copy-code" class="btn btn-secondary">Sao chép lệnh</button>
            </div>
          </div>
          
          <div class="login-methods">
            <div id="qr-code-container">
              <div id="qr-code"></div>
              <div id="qr-container-error">
                <p>Không thể tải mã QR. Vui lòng sử dụng nút đăng nhập bên dưới.</p>
              </div>
              <p class="qr-help">Quét mã QR bằng ứng dụng Telegram</p>
            </div>
            
            <div class="login-separator">
              <span>hoặc</span>
            </div>
            
            <div class="login-button-container">
              <button id="telegram-login-button" class="btn btn-primary">
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24" fill="#ffffff">
                  <path d="M12 0C5.373 0 0 5.373 0 12s5.373 12 12 12 12-5.373 12-12S18.627 0 12 0zm5.562 8.248l-1.43 6.69c-.104.487-.401.674-.813.419l-2.265-1.66-1.099 1.06c-.124.12-.226.22-.452.22l.163-2.279 4.151-3.738c.18-.163-.039-.253-.28-.09L8.36 11.883l-2.32-.726c-.506-.156-.514-.506.106-.748l9.073-3.5c.42-.156.785.096.646.6l-.052.027.001.012z"/>
                </svg>
                Đăng nhập với Telegram
              </button>
            </div>
          </div>
          
          <div id="login-status" class="login-status hidden">
            <div class="spinner"></div>
            <p>Đang xác thực...</p>
          </div>
        </div>
      </div>
    </main>

    <footer>
      <p>&copy; 2025 TeleDrive. Tất cả các quyền được bảo lưu.</p>
    </footer>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/qrcode@1.5.0/build/qrcode.min.js"></script>
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const qrCodeContainer = document.getElementById('qr-code');
      const qrContainerError = document.getElementById('qr-container-error');
      const telegramLoginButton = document.getElementById('telegram-login-button');
      const loginStatus = document.getElementById('login-status');
      const errorMessage = document.getElementById('error-message');
      const successMessage = document.getElementById('success-message');
      const authCodeContainer = document.getElementById('auth-code-container');
      const fullCommand = document.getElementById('full-command');
      const copyCodeButton = document.getElementById('copy-code');
      const copyFeedback = document.getElementById('copy-feedback');
      
      function showError(message) {
        errorMessage.textContent = message;
        errorMessage.style.display = 'block';
        setTimeout(() => {
          errorMessage.style.display = 'none';
        }, 8000);
      }
      
      function showSuccess(message) {
        successMessage.textContent = message;
        successMessage.style.display = 'block';
        setTimeout(() => {
          successMessage.style.display = 'none';
        }, 8000);
      }

      // Copy full command to clipboard
      function copyToClipboard() {
        const commandText = fullCommand.textContent;
        navigator.clipboard.writeText(commandText)
          .then(() => {
            copyFeedback.style.display = 'block';
            copyCodeButton.textContent = 'Đã sao chép';
            
            setTimeout(() => {
              copyFeedback.style.display = 'none';
              copyCodeButton.textContent = 'Sao chép lệnh';
            }, 3000);
          })
          .catch(err => {
            console.error('Lỗi khi sao chép: ', err);
            showError('Không thể sao chép lệnh. Vui lòng tự chép.');
          });
      }

      copyCodeButton.addEventListener('click', copyToClipboard);
      fullCommand.addEventListener('click', copyToClipboard);
      
      // Fetch login link
      fetch('/api/auth/login-link')
        .then(response => response.json())
        .then(data => {
          console.log('Login data:', data); // Log để debug
          
          if (!data.deepLink || !data.token) {
            showError('Không thể tạo liên kết đăng nhập, vui lòng thử lại sau.');
            return;
          }

          // Hiển thị đầy đủ lệnh với token
          const command = `/start login_${data.token}`;
          fullCommand.textContent = command;
          authCodeContainer.style.display = 'block';
          
          // Generate QR code
          QRCode.toCanvas(qrCodeContainer, data.deepLink, {
            width: 200,
            margin: 2,
            color: {
              dark: '#0088cc',
              light: '#ffffff'
            }
          }).then(() => {
            qrContainerError.style.display = 'none';
          }).catch(err => {
            console.error('Error generating QR code:', err);
            qrContainerError.style.display = 'block';
            qrCodeContainer.style.display = 'none';
          });
          
          // Set login button
          telegramLoginButton.addEventListener('click', function() {
            showSuccess('Đang mở Telegram... Nhấn nút START hoặc dán lệnh đã sao chép');
            
            // Mở cửa sổ Telegram nhỏ hơn và ở giữa màn hình
            const width = 600;
            const height = 600;
            const left = (window.screen.width - width) / 2;
            const top = (window.screen.height - height) / 2;
            const options = `width=${width},height=${height},left=${left},top=${top}`;
            
            window.open(data.deepLink, '_blank', options);
            startLoginCheck(data.token);
          });
          
          // Start checking for login
          startLoginCheck(data.token);
        })
        .catch(error => {
          console.error('Error fetching login link:', error);
          showError('Lỗi kết nối đến máy chủ. Vui lòng thử lại sau.');
          qrContainerError.style.display = 'block';
          qrCodeContainer.style.display = 'none';
        });
      
      function startLoginCheck(token) {
        loginStatus.classList.remove('hidden');
        
        let attempts = 0;
        const maxAttempts = 60; // 3 minutes max (60 * 3s)
        
        // Check login status every 3 seconds
        const interval = setInterval(() => {
          attempts++;
          
          // Stop checking after max attempts
          if (attempts >= maxAttempts) {
            clearInterval(interval);
            loginStatus.innerHTML = '<p>Hết thời gian đăng nhập. Vui lòng làm mới trang để thử lại.</p>';
            showError('Hết thời gian đăng nhập. Vui lòng làm mới trang để thử lại.');
            return;
          }
          
          fetch(`/api/auth/check-login?token=${token}`)
            .then(response => response.json())
            .then(data => {
              console.log('Check login response:', data); // Log để debug
              
              if (data.loggedIn) {
                clearInterval(interval);
                loginStatus.innerHTML = '<p>Đăng nhập thành công! Đang chuyển hướng...</p>';
                showSuccess('Đăng nhập thành công! Đang chuyển hướng...');
                setTimeout(() => {
                  window.location.href = data.redirectUrl || '/dashboard';
                }, 1000);
              }
            })
            .catch(error => {
              console.error('Error checking login status:', error);
            });
        }, 3000);
      }
    });
  </script>
</body>
</html> 