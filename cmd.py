#!/usr/bin/env python3
"""
CMD - Giao di·ªán d√≤ng l·ªánh cho TeleDrive
"""

import asyncio
import sys
from pathlib import Path
from telegram import get_telegram_manager

def print_files(files):
    """In danh s√°ch file"""
    if not files:
        print("Kh√¥ng t√¨m th·∫•y file n√†o.")
        return
    
    print(f"\n{'STT':<3} {'T√™n file':<40} {'K√≠ch th∆∞·ªõc':<10} {'Ng√†y':<16}")
    print("-" * 70)
    
    for i, file in enumerate(files, 1):
        name = file['name'][:37] + "..." if len(file['name']) > 40 else file['name']
        print(f"{i:<3} {name:<40} {file['size_formatted']:<10} {file['date']:<16}")

async def cmd_list(channel, limit=50):
    """Li·ªát k√™ file"""
    print(f"üìã ƒêang t·∫£i danh s√°ch file t·ª´ {channel}...")
    
    telegram = get_telegram_manager()
    result = await telegram.list_files(channel, limit)
    
    if result["success"]:
        print(f"‚úÖ T√¨m th·∫•y {len(result['files'])} file")
        print_files(result["files"])
    else:
        print(f"‚ùå L·ªói: {result['message']}")

async def cmd_search(channel, query, limit=20):
    """T√¨m ki·∫øm file"""
    print(f"üîç ƒêang t√¨m ki·∫øm '{query}' trong {channel}...")
    
    telegram = get_telegram_manager()
    result = await telegram.search_files(channel, query, limit)
    
    if result["success"]:
        print(f"‚úÖ T√¨m th·∫•y {len(result['files'])} file ph√π h·ª£p")
        print_files(result["files"])
    else:
        print(f"‚ùå L·ªói: {result['message']}")

async def cmd_download(channel, file_number):
    """T·∫£i file"""
    print(f"‚¨áÔ∏è ƒêang t·∫£i file s·ªë {file_number} t·ª´ {channel}...")
    
    telegram = get_telegram_manager()
    
    # L·∫•y danh s√°ch file tr∆∞·ªõc
    list_result = await telegram.list_files(channel, 100)
    if not list_result["success"]:
        print(f"‚ùå L·ªói l·∫•y danh s√°ch file: {list_result['message']}")
        return
    
    files = list_result["files"]
    if file_number < 1 or file_number > len(files):
        print(f"‚ùå S·ªë file kh√¥ng h·ª£p l·ªá. C√≥ {len(files)} file.")
        return
    
    file_info = files[file_number - 1]
    result = await telegram.download_file(channel, file_info["id"])
    
    if result["success"]:
        print(f"‚úÖ {result['message']}")
        print(f"üìÅ ƒê∆∞·ªùng d·∫´n: {result['file_path']}")
    else:
        print(f"‚ùå L·ªói: {result['message']}")

async def cmd_upload(channel, file_path, caption=""):
    """Upload file"""
    print(f"‚¨ÜÔ∏è ƒêang upload {file_path} l√™n {channel}...")
    
    telegram = get_telegram_manager()
    result = await telegram.upload_file(channel, file_path, caption)
    
    if result["success"]:
        print(f"‚úÖ {result['message']}")
    else:
        print(f"‚ùå L·ªói: {result['message']}")

async def main():
    """H√†m ch√≠nh"""
    if len(sys.argv) < 2:
        print("TeleDrive - Qu·∫£n l√Ω file Telegram")
        print("\nC√°ch s·ª≠ d·ª•ng:")
        print("  python cmd.py list <channel> [limit]")
        print("  python cmd.py search <channel> <t·ª´_kh√≥a> [limit]")
        print("  python cmd.py download <channel> <s·ªë_file>")
        print("  python cmd.py upload <channel> <ƒë∆∞·ªùng_d·∫´n_file> [m√¥_t·∫£]")
        print("\nV√≠ d·ª•:")
        print("  python cmd.py list @mychannel 10")
        print("  python cmd.py search @mychannel 'video' 5")
        print("  python cmd.py download @mychannel 1")
        print("  python cmd.py upload @mychannel ./file.pdf 'T√†i li·ªáu'")
        return
    
    command = sys.argv[1].lower()
    
    # K·∫øt n·ªëi Telegram
    telegram = get_telegram_manager()
    connect_result = await telegram.connect()
    
    if not connect_result["success"]:
        print(f"‚ùå Kh√¥ng th·ªÉ k·∫øt n·ªëi Telegram: {connect_result['message']}")
        print("üí° H√£y ch·∫°y ·ª©ng d·ª•ng desktop ƒë·ªÉ ƒëƒÉng nh·∫≠p tr∆∞·ªõc.")
        return
    
    user = connect_result.get("user")
    if user:
        print(f"‚úÖ ƒê√£ k·∫øt n·ªëi v·ªõi t√†i kho·∫£n: {user.first_name}")
    
    try:
        if command == "list":
            if len(sys.argv) < 3:
                print("‚ùå C√°ch d√πng: python cmd.py list <channel> [limit]")
                return
            
            channel = sys.argv[2]
            limit = int(sys.argv[3]) if len(sys.argv) > 3 else 50
            await cmd_list(channel, limit)
        
        elif command == "search":
            if len(sys.argv) < 4:
                print("‚ùå C√°ch d√πng: python cmd.py search <channel> <t·ª´_kh√≥a> [limit]")
                return
            
            channel = sys.argv[2]
            query = sys.argv[3]
            limit = int(sys.argv[4]) if len(sys.argv) > 4 else 20
            await cmd_search(channel, query, limit)
        
        elif command == "download":
            if len(sys.argv) < 4:
                print("‚ùå C√°ch d√πng: python cmd.py download <channel> <s·ªë_file>")
                return
            
            channel = sys.argv[2]
            file_number = int(sys.argv[3])
            await cmd_download(channel, file_number)
        
        elif command == "upload":
            if len(sys.argv) < 4:
                print("‚ùå C√°ch d√πng: python cmd.py upload <channel> <ƒë∆∞·ªùng_d·∫´n_file> [m√¥_t·∫£]")
                return
            
            channel = sys.argv[2]
            file_path = sys.argv[3]
            caption = sys.argv[4] if len(sys.argv) > 4 else ""
            await cmd_upload(channel, file_path, caption)
        
        else:
            print(f"‚ùå L·ªánh kh√¥ng h·ª£p l·ªá: {command}")
    
    finally:
        await telegram.disconnect()

if __name__ == "__main__":
    asyncio.run(main())
